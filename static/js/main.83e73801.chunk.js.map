{"version":3,"sources":["components/header.js","components/score.js","components/game.js","App.js","index.js"],"names":["Header","className","Score","props","useState","time","setTime","tick","prevTime","useEffect","timer","setInterval","clearInterval","score","onClick","Game","pictureCards","setPictureCards","clickCounter","setClickCounter","clickScore","setClickScore","clickArray","setClickArray","numberOfMatches","setNumberOfMatches","buttonBroken","setButtonBroken","reveal","index","element","document","getElementsByClassName","String","classList","remove","clickedOn","image","prevArray","getItemClicked","prevClicks","prevScore","fetch","then","res","json","arrayShuffled","x","length","y","Math","floor","random","temp","shuffle","arrayDup","secondArray","push","duplicate","message","src","add","prevNum","console","log","alert","setTimeout","map","dog","disabled","id","type","alt","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.83e73801.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"title\">\r\n      <h1>\r\n        Memory matching game\r\n      </h1>\r\n      <p className=\"instructions\">\r\n        Click on all the matching pictures to win.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, {useState, useEffect} from \"react\";\r\n\r\nfunction Score(props) {\r\n   const [time, setTime] = useState(0);\r\n\r\n   useEffect(() => {\r\n      var timer = setInterval( () => tick(), 1000);\r\n\r\n      return function cleanup() {\r\n         clearInterval(timer)\r\n      };\r\n   }, [time]);\r\n\r\n   function tick() {\r\n      setTime(prevTime => prevTime + 1);\r\n   }\r\n\r\n   //add a refresh the game button\r\n   //resets timer -starts timer\r\n   //hides pictures\r\n   //resets score\r\n\r\n   return (\r\n      <div>\r\n         <p className=\"score\">Clicks: {props.score} </p>\r\n         <button onClick={tick}>START</button>\r\n         <p className=\"timer\">Time: {time}</p>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Score;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport Score from './score';\r\n\r\nfunction Game() {\r\n   const [pictureCards, setPictureCards] = useState([]);\r\n   const [clickCounter, setClickCounter] = useState(0);\r\n   const [clickScore, setClickScore] = useState(0);\r\n   const [clickArray, setClickArray] = useState([]);\r\n   const [numberOfMatches, setNumberOfMatches] = useState(0);\r\n   const [buttonBroken, setButtonBroken] = useState(false);\r\n\r\n   useEffect(() => {\r\n      fetch(`https://dog.ceo/api/breed/corgi/images/random/8`)\r\n         .then(res => res.json())\r\n         .then(json => setPictureCards(shuffle(duplicate(json.message))))\r\n   }, [])\r\n\r\n   useEffect(() => {\r\n      ifMatch();\r\n      if (clickCounter >= 2) {\r\n         setClickCounter(0);\r\n         setClickArray([]);\r\n      }\r\n   }, [clickCounter, numberOfMatches, buttonBroken])\r\n\r\n   function shuffle(arrayShuffled) {\r\n      for (let x = arrayShuffled.length-1; x > 0; x--) {\r\n         const y = Math.floor(Math.random() * x)\r\n         const temp = arrayShuffled[x]\r\n         arrayShuffled[x] = arrayShuffled[y]\r\n         arrayShuffled[y] = temp\r\n      }\r\n      return arrayShuffled\r\n   }\r\n\r\n   function duplicate(arrayDup) {\r\n      let secondArray = []\r\n      for (let x=0; x<arrayDup.length; x++){\r\n         secondArray.push(arrayDup[x]);\r\n         secondArray.push(arrayDup[x]);\r\n      }\r\n      return secondArray\r\n   }\r\n\r\n   function reveal(index) {\r\n      let element = document.getElementsByClassName('index'+String(index));\r\n      element[0].classList.remove('hidden');\r\n      \r\n      getItemClicked(element)\r\n\r\n      setClickCounter(prevClicks => prevClicks + 1)\r\n      setClickScore(prevScore => prevScore + 1)\r\n   };\r\n   \r\n   function getItemClicked(clickedOn) {\r\n      let image = clickedOn[0]\r\n      setClickArray(prevArray => [...prevArray, image])\r\n   }\r\n\r\n   function ifMatch() {\r\n      if (clickArray.length === 2)  {\r\n         if (clickArray[0] !== clickArray[1] && clickArray[0].src === clickArray[1].src ) {\r\n            clickArray[0].classList.add('show');\r\n            clickArray[1].classList.add('show');\r\n            setNumberOfMatches(prevNum => prevNum + 1)\r\n            console.log(numberOfMatches)\r\n            if (numberOfMatches === 7) {\r\n               alert(\"You Win! Press the start button to play again.\")\r\n               setNumberOfMatches(0)\r\n            }\r\n         } else {\r\n         setButtonBroken(true)\r\n         setTimeout(function(){\r\n            clickArray[0].classList.add('hidden');\r\n            clickArray[1].classList.add('hidden');\r\n            setButtonBroken(false)\r\n         }, 1000);\r\n      }}\r\n   }\r\n\r\n   function resetGame() {\r\n      setClickScore(0)\r\n      \r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <Score score={clickScore}/> \r\n         <div className=\"game\">\r\n            {pictureCards.map((dog, index) => (\r\n               <button onClick={() => reveal(index)} key={index} disabled={buttonBroken}>\r\n                  <img\r\n                  className={'hidden index'+String(index)} \r\n                  id=\"dogs\"\r\n                  type=\"image\" \r\n                  src={dog} \r\n                  alt=\"\"\r\n                  />\r\n               </button>\r\n            ))}\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Game;\r\n","import './App.css'\nimport Header from './components/header';\nimport Game from './components/game'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"body\">\n        <Game />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}