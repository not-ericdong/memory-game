{"version":3,"sources":["components/header.js","components/score.js","components/game.js","App.js","index.js"],"names":["Header","className","Score","props","useState","time","setTime","useEffect","timer","setInterval","prevTime","clearInterval","score","onClick","reset","Game","pictureCards","setPictureCards","clickCounter","setClickCounter","clickScore","setClickScore","clickArray","setClickArray","numberOfMatches","setNumberOfMatches","buttonBroken","setButtonBroken","getDogImages","fetch","then","res","json","arrayShuffled","x","length","y","Math","floor","random","temp","shuffle","arrayDup","secondArray","push","duplicate","message","reveal","index","element","document","getElementsByClassName","String","classList","remove","clickedOn","image","prevArray","getItemClicked","prevClicks","prevScore","src","add","prevNum","alert","setTimeout","images","getElementsByTagName","console","log","map","dog","disabled","id","type","alt","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e5d8efce.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"title\">\r\n      <h1>\r\n        Memory matching game\r\n      </h1>\r\n      <p className=\"instructions\">\r\n        Click on all the matching pictures to win.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, {useState, useEffect} from \"react\";\r\n\r\nfunction Score(props) {\r\n   const [time, setTime] = useState(0);\r\n\r\n   useEffect(() => {\r\n      var timer = setInterval( () => tick(), 1000);\r\n\r\n      return function cleanup() {\r\n         clearInterval(timer)\r\n      };\r\n   }, [time]);\r\n\r\n   function tick() {\r\n      setTime(prevTime => prevTime + 1);\r\n   }\r\n\r\n   //-starts timer\r\n   function resetTime() {\r\n      setTime(0);\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <p className=\"score\">Clicks: {props.score} </p>\r\n         <button onClick={() => {props.reset(); resetTime();}}>Play Again</button>\r\n         <p className=\"timer\">Time: {time}</p>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Score;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport Score from './score';\r\n\r\nfunction Game() {\r\n   const [pictureCards, setPictureCards] = useState([]);\r\n   const [clickCounter, setClickCounter] = useState(0);\r\n   const [clickScore, setClickScore] = useState(0);\r\n   const [clickArray, setClickArray] = useState([]);\r\n   const [numberOfMatches, setNumberOfMatches] = useState(0);\r\n   const [buttonBroken, setButtonBroken] = useState(false);\r\n\r\n   useEffect(() => {\r\n      getDogImages();\r\n   }, [])\r\n\r\n   useEffect(() => {\r\n      ifMatch();\r\n      if (clickCounter >= 2) {\r\n         setClickCounter(0);\r\n         setClickArray([]);\r\n      }\r\n   }, [clickCounter, numberOfMatches, buttonBroken])\r\n\r\n   function getDogImages() {\r\n      fetch(`https://dog.ceo/api/breed/corgi/images/random/8`)\r\n         .then(res => res.json())\r\n         .then(json => setPictureCards(shuffle(duplicate(json.message))))\r\n   }\r\n\r\n   function shuffle(arrayShuffled) {\r\n      for (let x = arrayShuffled.length-1; x > 0; x--) {\r\n         const y = Math.floor(Math.random() * x)\r\n         const temp = arrayShuffled[x]\r\n         arrayShuffled[x] = arrayShuffled[y]\r\n         arrayShuffled[y] = temp\r\n      }\r\n      return arrayShuffled\r\n   }\r\n\r\n   function duplicate(arrayDup) {\r\n      let secondArray = []\r\n      for (let x=0; x<arrayDup.length; x++){\r\n         secondArray.push(arrayDup[x]);\r\n         secondArray.push(arrayDup[x]);\r\n      }\r\n      return secondArray\r\n   }\r\n\r\n   function reveal(index) {\r\n      let element = document.getElementsByClassName('index'+String(index));\r\n      element[0].classList.remove('hidden');\r\n      getItemClicked(element);\r\n      setClickCounter(prevClicks => prevClicks + 1);\r\n      setClickScore(prevScore => prevScore + 1);\r\n   };\r\n   \r\n   function getItemClicked(clickedOn) {\r\n      let image = clickedOn[0];\r\n      setClickArray(prevArray => [...prevArray, image]);\r\n   }\r\n\r\n   function ifMatch() {\r\n      if (clickArray.length === 2)  {\r\n         if (clickArray[0] !== clickArray[1] && clickArray[0].src === clickArray[1].src ) {\r\n            clickArray[0].classList.add('show');\r\n            clickArray[1].classList.add('show');\r\n            setNumberOfMatches(prevNum => prevNum + 1);\r\n            if (numberOfMatches === 7) {\r\n               setNumberOfMatches(0);\r\n               alert(`You Won! With ${clickScore} clicks. Press the 'Play Again' button to play again.`);\r\n            }\r\n         } else {\r\n         setButtonBroken(true);\r\n         setTimeout(function(){\r\n            clickArray[0].classList.add('hidden');\r\n            clickArray[1].classList.add('hidden');\r\n            setButtonBroken(false);\r\n         }, 1000);\r\n      }}\r\n   }\r\n\r\n   function resetGame() {\r\n      let images = document.getElementsByTagName('img')\r\n      console.log(images)\r\n      for (let x=0; x<images.length; x++) {\r\n         images[x].classList.remove('show')\r\n         images[x].classList.add('hidden')\r\n      }\r\n      setClickScore(0);\r\n      getDogImages();\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <Score score={clickScore} reset={resetGame}/> \r\n         <div className=\"game\">\r\n            {pictureCards.map((dog, index) => (\r\n               <button onClick={() => reveal(index)} key={index} disabled={buttonBroken}>\r\n                  <img\r\n                  className={'hidden index'+String(index)} \r\n                  id=\"dogs\"\r\n                  type=\"image\" \r\n                  src={dog} \r\n                  alt=\"\"\r\n                  />\r\n               </button>\r\n            ))}\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Game;\r\n","import './App.css'\nimport Header from './components/header';\nimport Game from './components/game'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"body\">\n        <Game />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}